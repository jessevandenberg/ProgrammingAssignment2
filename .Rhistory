makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setSolve <- function(solve) m <<- solve
getSolve <- function() m
list(set = set, get = get,
setSolve = setSolve,
getSolve = getSolve)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
m <- x$getSolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- Solve(data, ...)
x$setSolve(m)
m
}
x <- c(1,2,3,4,5,6,7,8,9)
makeCacheMatrix(x)
cacheSolve(x)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setSolve <- function(solve) m <<- solve
getSolve <- function() m
list(set = set, get = get,
setSolve = setSolve,
getSolve = getSolve)
}
cacheSolve <- function(x, ...) {
m <- x$getSolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- Solve(data, ...)
x$setSolve(m)
m
}
makeCacheMatrix(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(x)
cachemean(x)
cachemean(makeVector(x))
x <- data.matrix(1:10)
x
cacheSolve(makeCacheMatrix(x))
x <- 1:1000000
x
cachemean(makeVector(x))
?rnorm
x <- rnorm(100000000)
cachemean(makeVector(x))
cachemean(makeVector(x))
cachemean(makeVector(x))
cachemean(makeVector(x))
x <- 1:10
cachemean(makeVector(x))
cacheSolve(makeCacheMatrix(x))
cacheSolve <- function(x, ...) {
m <- x$getsSolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setsolve(m)
m
}
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setsolve <- function(solve) m <<- solve
getsolve <- function() m
list(set = set, get = get,
setsolve = setsolve,
getsolve = getsolve)
}
cacheSolve(makeCacheMatrix(x))
cacheSolve <- function(x, ...) {
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setsolve(m)
m
}
cacheSolve(makeCacheMatrix(x))
x <- rbind(c(1,2), c(1,2))
x
cacheSolve(makeCacheMatrix(x))
x <- rbind(c(1,2,3,4), c(4,3,2,1)
x <- rbind(c(1,2,3,4), c(4,3,2,1))
cacheSolve(makeCacheMatrix(x))
x <- rbind(c(1,2,3,4), c(4,3,2,1), c(3,4,1,2), c(2,1,4,3))
cacheSolve(makeCacheMatrix(x))
x <- rbind(c(1,2,3,4), c(4,3,2,1), c(3,4,1,2), c(3,4,1,2))
cacheSolve(makeCacheMatrix(x))
x <- rbind(c(1,2,3,4), c(4,3,2,1), c(3,4,1,2), c(3,4,1,1))
cacheSolve(makeCacheMatrix(x))
?setmean
?setsolve
??setmean
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
makeCacheMatrix(x)
cacheSolve(makeCacheMatrix())
y <- makeCacheMatrix(x)
cacheSolve(y)
cacheSolve(y)
